out <- out[!duplicated(out[, c('model_gruppe', 'Scenarie')])]
out_pot_goedning <- out[Scenarie != 'kontrol', .(TotGoednabDyr_kt_år_pot = sum(TotGoedningabDyr_kt_year_pot),
TotGoedningabDyr_kt_år_udbr = sum(TotGoedningabDyr_kt_year_udbr)), by = c('Scenarie', 'Dyr')]
write.xlsx(out_pot_goedning, '../output/udbred_poten_kt_Goedn_år.xlsx')
out_dyr <- copy(out)
out_dyr <- out_dyr[, .(sum_reduktion_totCO2_eq_tot = sum(reduktion_totCO2_eq_tot),
mean_reduktion_totCO2_eq_tot_m3 = sum(reduktion_CO2_eq_tot_m3 * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_stald = sum(CH4_dyr_stald * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_lager = sum(CH4_dyr_lager * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_tot = sum(CH4_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
N2O_dyr_tot = sum(N2O_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
udbredelse = sum(udbredelse * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
fortrængning = sum(CO2_eq_fortræng * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year))
, by = c('Scenarie', 'Dyr')]
write.xlsx(out_dyr, '../output/emis_table_DyrSamlet_KVIK.xlsx')
units <- data.frame(t(data.frame(units = c('model_gruppe',
'Scenarie',
'Udledning stald, kg CH4 pr. m3 ab dyr pr. år',
'Udledning lager, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg N2O pr. m3 ab dyr pr. år',
'Biogas fortrængning, kg CO2e pr. m3 ab dyr pr. år',
'Udledning total, kg CO2e netto pr. m3 ab dyr pr. år',
'Udledning total, kt CO2e netto pr. år',
'DyreType',
'Gødning total, kt ab dyr pr. år',
'Tørstof total, kt ab dyr pr. år',
'Dyr',
'Gødning, kg ab dyr pr. dyr prod/årsdyr',
'udbred. tekn., %',
'potent. tekn., %',
'Gødning, kg ab lager pr. kg ab dyr',
'Gødning total, kt ab lager pr. år',
'Tørstof, kg ab dyr pr. m3 ab dyr',
'udbred., % af modelgruppe',
'potent., % af modelgruppe',
'reduktion total potentiale, kt CO2e pr. år',
'reduktion, kg CO2e reduceret pr. m3 ab dyr',
'Gødning total potentiale, kt ab dyr pr. år',
'Gødning total udbredelse, kt ab dyr pr. år'))))
names(units) <- names(out)
out <- rbind(units, out)
setDT(out)
out_table <- out[, .(model_gruppe, Scenarie, CH4_dyr_stald, CH4_dyr_lager, CH4_dyr_tot, N2O_dyr_tot,
CO2_eq_fortræng, CO2_eq_tot, TotGoednabDyr_kt_year, TotGoedningabDyr_kt_year_udbr, TotTSabDyr_kt_year, udbredelse, potentiale,
reduktion_CO2_eq_tot_m3, reduktion_totCO2_eq_tot, Dyr)]
names(out_table) <- c(t(out_table[1,]))
unique(out_table$model_gruppe)
out_table <- out_table[-1,]
out_table[, model_gruppe:= factor(model_gruppe, levels = c('kvæg_ringkanal','kvæg_fast_skrab','kvæg_spalter_skrab',
'kvæg_hæld_fast_skrab','kvæg_andre_hyppig',
'spalter_33_67_slagtesvin','spalter_25_50_slagtesvin','spalter_50_75_slagtesvin',
'løs_individuel_søer','farestald_delvis_spalte', 'farestald_fuldspalte',
'toklimastald_smågrise','spalter_smågrise'))]
setorder(out_table, Scenarie, model_gruppe)
cols_index <- which(!names(out_table) %in% c('model_gruppe', 'Scenarie','Dyr'))
out_table[, (cols_index) := lapply(.SD, function(x) round(as.numeric(x), 3)), .SDcols = cols_index]
out_table[, model_gruppe := gsub('_', ' ', model_gruppe)]
write.xlsx(out_table, '../output/emis_table_KVIK.xlsx')
rm(list = ls())
library(readxl)
library(data.table)
library(openxlsx)
dat <- fread('../data/dat_merged.csv')
# checking amonuts of manure
#test <- dat[StaldID == 7 & GoedningsNavn == 'Gylle' & Scenarie == 'kontrol']
#sum(test$TotGoednabDyr)
CO2_eq <- c(CH4 = 28, N2O = 265)
## SVIN
# gylle systemer
toklimastald_smågrise <- c(20)
spalter_smågrise <- c(46)
spalter_33_67_slagtesvin <- c(47)
spalter_50_75_slagtesvin <- c(72, 19)
spalter_25_50_slagtesvin <- c(73)
løs_individuel_søer <- c(60, 63, 8, 10, 80, 79)
farestald_delvis_spalte <- c(64)
farestald_fuldspalte <- c(65)
svin_gylle <- c(20,46,47,72,19,73,60,63,8,10,80,79,64,65)
## KVÆG
# gylle systemer
kvæg_ringkanal <- c(6, 13)
kvæg_fast_skrab <- c(5, 11)
kvæg_spalter_skrab <- c(7, 14)
kvæg_hæld_fast_skrab <- c(49)
kvæg_andre_hyppig <- c(2, 4) # 2 is spaltegulvbokse, what is that?
kvæg_gylle <- c(6,13,5,11,7,14,49,2,4)
model_gruppe_navne <- c('toklimastald_smågrise',
'spalter_smågrise',
'spalter_33_67_slagtesvin',
'spalter_50_75_slagtesvin',
'spalter_25_50_slagtesvin',
'løs_individuel_søer',
'farestald_delvis_spalte',
'farestald_fuldspalte',
'kvæg_ringkanal',
'kvæg_fast_skrab',
'kvæg_spalter_skrab',
'kvæg_hæld_fast_skrab',
'kvæg_andre_hyppig'
)
cols <- c('CH4_dyr_stald', 'CH4_dyr_lager', 'CH4_dyr_biog', 'NH3_dyr_stald', 'NH3_dyr_lager','N2O_dyr_dir_tot', 'N2O_dyr_indir_tot', 'strøm_CO2_ton')
tot_cols <- paste0('tot', cols)
dat[, strøm_CO2_ton := 0]
# Initialize the total columns with 0
dat <- dat[, (tot_cols) := 0][!duplicated(dat)]
# if biogas is used change the CH4 produktion to include emission from prestorage tank and change storage to digestate emission.
# also change N2O emission (based on national inventory report 2023, p431)
biogas <- copy(dat)[Scenarie == 'kontrol'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'biogas']
ugentlig_biogas <- copy(dat)[Scenarie == 'ugentlig'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'ugentlig_biogas']
køling_biogas <- copy(dat)[Scenarie == 'køling'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'køling_biogas']
dat <- rbind(dat, biogas, ugentlig_biogas, køling_biogas)
dat[grepl('køling', Scenarie) & DyreType == 'smågrise', strøm_CO2_ton := 1.3]
dat[grepl('køling', Scenarie) & DyreType == 'slagtesvin', strøm_CO2_ton := 1.4]
dat[grepl('køling', Scenarie) & DyreType == 'søer', strøm_CO2_ton := 1.8]
# Multiply each column in 'cols' by 1 (no change), emis units in kg CH4/m3/year or kg CH4/year, kg CO2 eq/m3/year, kg CO2 eq/year
# totCO2_eq_tot is in kt CO2 eq emitted (so kg CO2 eq multiplied by 10^6)
emis <- dat[, (cols) := lapply(.SD, function(x) x * 1), .SDcols = cols, by = c('StaldID', 'Scenarie', 'GoedningsNavn')][
, (tot_cols) := lapply(.SD, function(x) x * TotGoednabDyr), .SDcols = cols, by = c('StaldID', 'Scenarie')][
, ":="(CH4_dyr_tot = CH4_dyr_stald + CH4_dyr_lager,
NH3_dyr_tot = NH3_dyr_stald + NH3_dyr_lager,
N2O_dyr_tot = N2O_dyr_indir_tot + N2O_dyr_dir_tot)][
, ":=" (CO2_eq_tot_CH4 = CH4_dyr_tot * ..CO2_eq[['CH4']],
CO2_eq_tot_N2O = N2O_dyr_tot * ..CO2_eq[['N2O']])][
, CO2_eq_tot := CO2_eq_tot_N2O + CO2_eq_tot_CH4 + strøm_CO2_ton][
, ":="(totCH4_dyr_tot = totCH4_dyr_stald + totCH4_dyr_lager,
totN2O_dyr_tot = totN2O_dyr_dir_tot + totN2O_dyr_indir_tot)][
, totCO2_eq_tot := (totCH4_dyr_tot * ..CO2_eq[['CH4']] +
totN2O_dyr_tot * ..CO2_eq[['N2O']] + totstrøm_CO2_ton)/1e+06]
# totCO2_eq_fortræng is in kt CO2 eq (so kg CO2 eq multiplied by 10^6)
emis[, model_gruppe := 'char']
emis[!grepl('biogas', Scenarie), ":="(CH4_dyr_biog = 0, totCH4_dyr_biog = 0)]
emis[, ":="(CO2_eq_fortræng = CH4_dyr_biog * 2.32,
totCO2_eq_fortræng = (totCH4_dyr_biog * 2.32)/1e+06)][
, ":="(CO2_eq_tot = CO2_eq_tot,
totCO2_eq_tot = totCO2_eq_tot)
]
for(i in model_gruppe_navne){
emis[StaldID %in% eval(parse(text = i)), model_gruppe := i]
}
emis_summary <- emis[, .(CH4_dyr_stald = unique(CH4_dyr_stald),
CH4_dyr_lager = unique(CH4_dyr_lager),
CH4_dyr_tot = unique(CH4_dyr_tot),
N2O_dyr_tot = unique(N2O_dyr_tot),
CO2_eq_fortræng = unique(CO2_eq_fortræng),
CO2_eq_tot = unique(CO2_eq_tot),
totCO2_eq_tot = sum(totCO2_eq_tot, na.rm = T)), by = c('Scenarie', 'model_gruppe')]
TotGoednabDyr <- setDT(read_excel('../output/TotGoedningabDyr.xlsx'))
Tech_udb <- setDT(read_excel('../data/teknologi_udbredelse.xlsx'))
Tech_pot <- setDT(read_excel('../data/teknologi_potentiale.xlsx'))
out <- merge.data.table(emis_summary, TotGoednabDyr)[Scenarie != "" & Scenarie != 'char']
techs <- unique(emis_summary[Scenarie != 'kontrol', Scenarie])
model_gruppe <- unique(out[, model_gruppe])
for(i in model_gruppe){
for(o in techs){
if(any(out[model_gruppe == i, Scenarie] == o)){
out[model_gruppe == i & Scenarie == o, ":="(udbredelse = ..Tech_udb[model_gruppe == i, eval(parse(text = o))],
potentiale = ..Tech_pot[model_gruppe == i, eval(parse(text = o))])]
}
}
}
out <- out[, ":="(reduktion_totCO2_eq_tot = (totCO2_eq_tot[Scenarie == 'kontrol'] - totCO2_eq_tot) * ((potentiale-udbredelse)/100),
reduktion_CO2_eq_tot_m3 = CO2_eq_tot[Scenarie == 'kontrol'] - CO2_eq_tot), by = 'model_gruppe'][order(Scenarie)]
out[, TotGoedningabDyr_kt_year_pot := TotGoednabDyr_kt_year * ((potentiale - udbredelse)/100)]
out <- out[!duplicated(out[, c('model_gruppe', 'Scenarie')])]
out_pot_goedning <- out[Scenarie != 'kontrol', .(TotGoednabDyr_kt_år = sum(TotGoedningabDyr_kt_year_pot)), by = c('Scenarie', 'Dyr')]
write.xlsx(out_pot_goedning, '../output/udbred_poten_kt_Goedn_år.xlsx')
out_dyr <- copy(out)
out_dyr <- out_dyr[, .(sum_reduktion_totCO2_eq_tot = sum(reduktion_totCO2_eq_tot),
mean_reduktion_totCO2_eq_tot_m3 = sum(reduktion_CO2_eq_tot_m3 * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_stald = sum(CH4_dyr_stald * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_lager = sum(CH4_dyr_lager * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_tot = sum(CH4_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
N2O_dyr_tot = sum(N2O_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
udbredelse = sum(udbredelse * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
fortrængning = sum(CO2_eq_fortræng * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year))
, by = c('Scenarie', 'Dyr')]
write.xlsx(out_dyr, '../output/emis_table_DyrSamlet_KVIK.xlsx')
units <- data.frame(t(data.frame(units = c('model_gruppe',
'Scenarie',
'Udledning stald, kg CH4 pr. m3 ab dyr pr. år',
'Udledning lager, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg N2O pr. m3 ab dyr pr. år',
'Biogas fortrængning, kg CO2e pr. m3 ab dyr pr. år',
'Udledning total, kg CO2e netto pr. m3 ab dyr pr. år',
'Udledning total, kt CO2e netto pr. år',
'DyreType',
'Gødning total, kt ab dyr pr. år',
'Tørstof total, kt ab dyr pr. år',
'Dyr',
'Gødning, kg ab dyr pr. dyr prod/årsdyr',
'udbred. tekn., %',
'potent. tekn., %',
'Gødning, kg ab lager pr. kg ab dyr',
'Gødning total, kt ab lager pr. år',
'Tørstof, kg ab dyr pr. m3 ab dyr',
'udbred., % af modelgruppe',
'potent., % af modelgruppe',
'reduktion total potentiale, kt CO2e pr. år',
'reduktion, kg CO2e reduceret pr. m3 ab dyr',
'Gødning total potentiale, kt ab dyr pr. år'))))
names(units) <- names(out)
out <- rbind(units, out)
setDT(out)
out_table <- out[, .(model_gruppe, Scenarie, CH4_dyr_stald, CH4_dyr_lager, CH4_dyr_tot, N2O_dyr_tot,
CO2_eq_fortræng, CO2_eq_tot, TotGoednabDyr_kt_year, TotTSabDyr_kt_year, udbredelse, potentiale,
reduktion_CO2_eq_tot_m3, reduktion_totCO2_eq_tot, Dyr)]
names(out_table) <- c(t(out_table[1,]))
unique(out_table$model_gruppe)
out_table <- out_table[-1,]
out_table[, model_gruppe:= factor(model_gruppe, levels = c('kvæg_ringkanal','kvæg_fast_skrab','kvæg_spalter_skrab',
'kvæg_hæld_fast_skrab','kvæg_andre_hyppig',
'spalter_33_67_slagtesvin','spalter_25_50_slagtesvin','spalter_50_75_slagtesvin',
'løs_individuel_søer','farestald_delvis_spalte', 'farestald_fuldspalte',
'toklimastald_smågrise','spalter_smågrise'))]
setorder(out_table, Scenarie, model_gruppe)
cols_index <- which(!names(out_table) %in% c('model_gruppe', 'Scenarie','Dyr'))
out_table[, (cols_index) := lapply(.SD, function(x) round(as.numeric(x), 3)), .SDcols = cols_index]
write.xlsx(out_table, '../output/emis_table_KVIK.xlsx')
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2025-KVIK/scripts")
# Frederik Rask Dalby, 11.11.2024
rm(list = ls())
library(data.table)
library(readxl)
library(openxlsx)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 07112024_org.xlsx', sheet = 1, skip = 1))
#til_Stine <- dat_VS[, .(StaldNavn, StaldID)]
#til_Stine <- til_Stine[!duplicated(StaldID)]
#write.xlsx(til_Stine, '../output/Stine_02092024.xlsx')
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 07112024_org.xlsx', sheet = 2, skip = 1))
#fix mismatch in names
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat <- merge.data.table(dat_VS, dat_anim)
#change some names
old_names <- c('AntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
NDyr_farestald <- dat[StaldID %in% c(64, 65) & !duplicated(StaldID), sum(NDyr)]
NDyr_løbestald <- dat[DyrID == 12 & !duplicated(StaldID) & !StaldID %in% c(64, 65), sum(NDyr)]
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
frac_løbestald <- 1- frac_farestald
#make new coloumn "NDyr_mod" which can be directly multiplied with excretions to get yearly excretion.
dat[, NDyr_mod := NDyr]
dat[StaldID %in% c(64, 65), NDyr_mod := NDyr * 1/frac_farestald]
dat[!StaldID %in% c(64, 65) & DyrID == 12, NDyr_mod := NDyr * 1/frac_løbestald]
#calculate yearly excretions on columns
cols <- c('NabDyr', 'TANabDyr', 'GoednabDyr')
new_cols <- paste0('Tot', cols)
dat[, (new_cols) := .SD * NDyr_mod, .SDcols = cols]
#
dyretype_goedning <- dat[, sum(TotGoednabDyr), by = 'DyreType']
# Frederik Rask Dalby, 11.11.2024
rm(list = ls())
library(data.table)
library(readxl)
library(openxlsx)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 07112024.xlsx', sheet = 1, skip = 1))
#til_Stine <- dat_VS[, .(StaldNavn, StaldID)]
#til_Stine <- til_Stine[!duplicated(StaldID)]
#write.xlsx(til_Stine, '../output/Stine_02092024.xlsx')
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 07112024.xlsx', sheet = 2, skip = 1))
#fix mismatch in names
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat <- merge.data.table(dat_VS, dat_anim)
#change some names
old_names <- c('AntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
NDyr_farestald <- dat[StaldID %in% c(64, 65) & !duplicated(StaldID), sum(NDyr)]
NDyr_løbestald <- dat[DyrID == 12 & !duplicated(StaldID) & !StaldID %in% c(64, 65), sum(NDyr)]
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
frac_løbestald <- 1- frac_farestald
#make new coloumn "NDyr_mod" which can be directly multiplied with excretions to get yearly excretion.
dat[, NDyr_mod := NDyr]
dat[StaldID %in% c(64, 65), NDyr_mod := NDyr * 1/frac_farestald]
dat[!StaldID %in% c(64, 65) & DyrID == 12, NDyr_mod := NDyr * 1/frac_løbestald]
#calculate yearly excretions on columns
cols <- c('NabDyr', 'TANabDyr', 'GoednabDyr')
new_cols <- paste0('Tot', cols)
dat[, (new_cols) := .SD * NDyr_mod, .SDcols = cols]
#
dyretype_goedning <- dat[, sum(TotGoednabDyr), by = 'DyreType']
#model dat
dat_model_pig <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v10.xlsx')))
names(dat_model_pig) <- as.character(dat_model_pig[1, ])
dat_model_pig <- dat_model_pig[-c(1:2), ]
dat_model_cattle <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v10.xlsx', sheet = 'Tabel_kvæg')))
names(dat_model_cattle) <- as.character(dat_model_cattle[1, ])
dat_model_cattle <- dat_model_cattle[-c(1:2), ]
dat_model <- rbind(dat_model_pig, dat_model_cattle, fill =T)
#fix names in model spreadsheet
old_names <- c('CH4-udledning stald, gylle ab dyr',
'CH4-udledning stald og for/afhent.tank, gylle ab dyr',
'CH4-udledning lager, gylle ab dyr',
'CH4-udledning, afgasset gylle, gylle ab dyr',
'CH4-produktion, biogasanlæg, gylle ab dyr',
'NH3-udledning ab stald, gylle',
'NH3-udledning ab lager, gylle',
'N2O-udledning direkte total, gylle',
'N2O-udledning indirekte total, gylle'
)
new_names <- c('CH4_dyr_stald', 'CH4_dyr_Stald_aft', 'CH4_dyr_lager', 'CH4_dyr_afg', 'CH4_dyr_biog',
'NH3_dyr_stald', 'NH3_dyr_lager', 'N2O_dyr_dir_tot', 'N2O_dyr_indir_tot'
)
setnames(dat_model, old = old_names, new = new_names)
dat_model <- dat_model[, c((new_names), 'GoedningsID') := lapply(.SD, as.numeric), .SDcols = c(new_names, 'GoedningsID')][, c(..new_names, 'StaldID', 'GoedningsID','Scenarie')]
#rows with a dot in StaldID
.rows <- dat_model[grepl("\\.", StaldID)]
#create replacement rows by splitting StaldID
.rows_rpl <- do.call(rbind, lapply(1:.rows[,.N], function(x) {
id <- unlist(strsplit(as.character(.rows[x, 'StaldID']), "\\."))
if(any(grepl("\\D", id))) id[grepl("\\D", id)] <- gsub("\\D", "", id[grepl("\\D", id)])
x <- rbindlist(replicate(length(id), .rows[x], simplify = FALSE))
x[, StaldID := ..id]
return(x)
}
))
dat_model <- rbind(dat_model[!grepl("\\.", StaldID)], .rows_rpl)[, StaldID := as.numeric(StaldID)]
dat_merged <- merge.data.table(dat, dat_model, by = c('StaldID', 'GoedningsID'), all = T, allow.cartesian=TRUE)
fwrite(dat_merged, '../data/dat_merged.csv', row.names = F)
rm(list = ls())
library(readxl)
library(data.table)
library(openxlsx)
dat <- fread('../data/dat_merged.csv')
# checking amonuts of manure
#test <- dat[StaldID == 7 & GoedningsNavn == 'Gylle' & Scenarie == 'kontrol']
#sum(test$TotGoednabDyr)
CO2_eq <- c(CH4 = 28, N2O = 265)
## SVIN
# gylle systemer
toklimastald_smågrise <- c(20)
spalter_smågrise <- c(46)
spalter_33_67_slagtesvin <- c(47)
spalter_50_75_slagtesvin <- c(72, 19)
spalter_25_50_slagtesvin <- c(73)
løs_individuel_søer <- c(60, 63, 8, 10, 80, 79)
farestald_delvis_spalte <- c(64)
farestald_fuldspalte <- c(65)
svin_gylle <- c(20,46,47,72,19,73,60,63,8,10,80,79,64,65)
## KVÆG
# gylle systemer
kvæg_ringkanal <- c(6, 13)
kvæg_fast_skrab <- c(5, 11)
kvæg_spalter_skrab <- c(7, 14)
kvæg_hæld_fast_skrab <- c(49)
kvæg_andre_hyppig <- c(2, 4) # 2 is spaltegulvbokse, what is that?
kvæg_gylle <- c(6,13,5,11,7,14,49,2,4)
model_gruppe_navne <- c('toklimastald_smågrise',
'spalter_smågrise',
'spalter_33_67_slagtesvin',
'spalter_50_75_slagtesvin',
'spalter_25_50_slagtesvin',
'løs_individuel_søer',
'farestald_delvis_spalte',
'farestald_fuldspalte',
'kvæg_ringkanal',
'kvæg_fast_skrab',
'kvæg_spalter_skrab',
'kvæg_hæld_fast_skrab',
'kvæg_andre_hyppig'
)
cols <- c('CH4_dyr_stald', 'CH4_dyr_lager', 'CH4_dyr_biog', 'NH3_dyr_stald', 'NH3_dyr_lager','N2O_dyr_dir_tot', 'N2O_dyr_indir_tot', 'strøm_CO2_ton')
tot_cols <- paste0('tot', cols)
dat[, strøm_CO2_ton := 0]
# Initialize the total columns with 0
dat <- dat[, (tot_cols) := 0][!duplicated(dat)]
# if biogas is used change the CH4 produktion to include emission from prestorage tank and change storage to digestate emission.
# also change N2O emission (based on national inventory report 2023, p431)
biogas <- copy(dat)[Scenarie == 'kontrol'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'biogas']
ugentlig_biogas <- copy(dat)[Scenarie == 'ugentlig'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'ugentlig_biogas']
køling_biogas <- copy(dat)[Scenarie == 'køling'][
, ":="(CH4_dyr_stald = CH4_dyr_Stald_aft,
CH4_dyr_lager = CH4_dyr_afg,
N2O_dyr_dir_tot = N2O_dyr_dir_tot * 0.0006/0.00475)][
, Scenarie := 'køling_biogas']
dat <- rbind(dat, biogas, ugentlig_biogas, køling_biogas)
dat[grepl('køling', Scenarie) & DyreType == 'smågrise', strøm_CO2_ton := 1.3]
dat[grepl('køling', Scenarie) & DyreType == 'slagtesvin', strøm_CO2_ton := 1.4]
dat[grepl('køling', Scenarie) & DyreType == 'søer', strøm_CO2_ton := 1.8]
# Multiply each column in 'cols' by 1 (no change), emis units in kg CH4/m3/year or kg CH4/year, kg CO2 eq/m3/year, kg CO2 eq/year
# totCO2_eq_tot is in kt CO2 eq emitted (so kg CO2 eq multiplied by 10^6)
emis <- dat[, (cols) := lapply(.SD, function(x) x * 1), .SDcols = cols, by = c('StaldID', 'Scenarie', 'GoedningsNavn')][
, (tot_cols) := lapply(.SD, function(x) x * TotGoednabDyr), .SDcols = cols, by = c('StaldID', 'Scenarie')][
, ":="(CH4_dyr_tot = CH4_dyr_stald + CH4_dyr_lager,
NH3_dyr_tot = NH3_dyr_stald + NH3_dyr_lager,
N2O_dyr_tot = N2O_dyr_indir_tot + N2O_dyr_dir_tot)][
, ":=" (CO2_eq_tot_CH4 = CH4_dyr_tot * ..CO2_eq[['CH4']],
CO2_eq_tot_N2O = N2O_dyr_tot * ..CO2_eq[['N2O']])][
, CO2_eq_tot := CO2_eq_tot_N2O + CO2_eq_tot_CH4 + strøm_CO2_ton][
, ":="(totCH4_dyr_tot = totCH4_dyr_stald + totCH4_dyr_lager,
totN2O_dyr_tot = totN2O_dyr_dir_tot + totN2O_dyr_indir_tot)][
, totCO2_eq_tot := (totCH4_dyr_tot * ..CO2_eq[['CH4']] +
totN2O_dyr_tot * ..CO2_eq[['N2O']] + totstrøm_CO2_ton)/1e+06]
# totCO2_eq_fortræng is in kt CO2 eq (so kg CO2 eq multiplied by 10^6)
emis[, model_gruppe := 'char']
emis[!grepl('biogas', Scenarie), ":="(CH4_dyr_biog = 0, totCH4_dyr_biog = 0)]
emis[, ":="(CO2_eq_fortræng = CH4_dyr_biog * 2.32,
totCO2_eq_fortræng = (totCH4_dyr_biog * 2.32)/1e+06)][
, ":="(CO2_eq_tot = CO2_eq_tot,
totCO2_eq_tot = totCO2_eq_tot)
]
for(i in model_gruppe_navne){
emis[StaldID %in% eval(parse(text = i)), model_gruppe := i]
}
emis_summary <- emis[, .(CH4_dyr_stald = unique(CH4_dyr_stald),
CH4_dyr_lager = unique(CH4_dyr_lager),
CH4_dyr_tot = unique(CH4_dyr_tot),
N2O_dyr_tot = unique(N2O_dyr_tot),
CO2_eq_fortræng = unique(CO2_eq_fortræng),
CO2_eq_tot = unique(CO2_eq_tot),
totCO2_eq_tot = sum(totCO2_eq_tot, na.rm = T)), by = c('Scenarie', 'model_gruppe')]
TotGoednabDyr <- setDT(read_excel('../output/TotGoedningabDyr.xlsx'))
Tech_udb <- setDT(read_excel('../data/teknologi_udbredelse.xlsx'))
Tech_pot <- setDT(read_excel('../data/teknologi_potentiale.xlsx'))
out <- merge.data.table(emis_summary, TotGoednabDyr)[Scenarie != "" & Scenarie != 'char']
techs <- unique(emis_summary[Scenarie != 'kontrol', Scenarie])
model_gruppe <- unique(out[, model_gruppe])
for(i in model_gruppe){
for(o in techs){
if(any(out[model_gruppe == i, Scenarie] == o)){
out[model_gruppe == i & Scenarie == o, ":="(udbredelse = ..Tech_udb[model_gruppe == i, eval(parse(text = o))],
potentiale = ..Tech_pot[model_gruppe == i, eval(parse(text = o))])]
}
}
}
out <- out[, ":="(reduktion_totCO2_eq_tot = (totCO2_eq_tot[Scenarie == 'kontrol'] - totCO2_eq_tot) * ((potentiale-udbredelse)/100),
reduktion_CO2_eq_tot_m3 = CO2_eq_tot[Scenarie == 'kontrol'] - CO2_eq_tot), by = 'model_gruppe'][order(Scenarie)]
out[, ":="(TotGoedningabDyr_kt_year_pot = TotGoednabDyr_kt_year * ((potentiale - udbredelse)/100),
TotGoedningabDyr_kt_year_udbr = TotGoednabDyr_kt_year * (udbredelse/100))]
out <- out[!duplicated(out[, c('model_gruppe', 'Scenarie')])]
out_pot_goedning <- out[Scenarie != 'kontrol', .(TotGoednabDyr_kt_år_pot = sum(TotGoedningabDyr_kt_year_pot),
TotGoedningabDyr_kt_år_udbr = sum(TotGoedningabDyr_kt_year_udbr)), by = c('Scenarie', 'Dyr')]
write.xlsx(out_pot_goedning, '../output/udbred_poten_kt_Goedn_år.xlsx')
out_dyr <- copy(out)
out_dyr <- out_dyr[, .(sum_reduktion_totCO2_eq_tot = sum(reduktion_totCO2_eq_tot),
mean_reduktion_totCO2_eq_tot_m3 = sum(reduktion_CO2_eq_tot_m3 * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_stald = sum(CH4_dyr_stald * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_lager = sum(CH4_dyr_lager * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
CH4_dyr_tot = sum(CH4_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
N2O_dyr_tot = sum(N2O_dyr_tot * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
udbredelse = sum(udbredelse * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year),
fortrængning = sum(CO2_eq_fortræng * TotGoednabDyr_kt_year)/sum(TotGoednabDyr_kt_year))
, by = c('Scenarie', 'Dyr')]
write.xlsx(out_dyr, '../output/emis_table_DyrSamlet_KVIK.xlsx')
units <- data.frame(t(data.frame(units = c('model_gruppe',
'Scenarie',
'Udledning stald, kg CH4 pr. m3 ab dyr pr. år',
'Udledning lager, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg CH4 pr. m3 ab dyr pr. år',
'Udledning total, kg N2O pr. m3 ab dyr pr. år',
'Biogas fortrængning, kg CO2e pr. m3 ab dyr pr. år',
'Udledning total, kg CO2e netto pr. m3 ab dyr pr. år',
'Udledning total, kt CO2e netto pr. år',
'DyreType',
'Gødning total, kt ab dyr pr. år',
'Tørstof total, kt ab dyr pr. år',
'Dyr',
'Gødning, kg ab dyr pr. dyr prod/årsdyr',
'udbred. tekn., %',
'potent. tekn., %',
'Gødning, kg ab lager pr. kg ab dyr',
'Gødning total, kt ab lager pr. år',
'Tørstof, kg ab dyr pr. m3 ab dyr',
'udbred., % af modelgruppe',
'potent., % af modelgruppe',
'reduktion total potentiale, kt CO2e pr. år',
'reduktion, kg CO2e reduceret pr. m3 ab dyr',
'Gødning total potentiale, kt ab dyr pr. år',
'Gødning total udbredelse, kt ab dyr pr. år'))))
names(units) <- names(out)
out <- rbind(units, out)
setDT(out)
out_table <- out[, .(model_gruppe, Scenarie, CH4_dyr_stald, CH4_dyr_lager, CH4_dyr_tot, N2O_dyr_tot,
CO2_eq_fortræng, CO2_eq_tot, TotGoednabDyr_kt_year, TotGoedningabDyr_kt_year_udbr, TotTSabDyr_kt_year, udbredelse, potentiale,
reduktion_CO2_eq_tot_m3, reduktion_totCO2_eq_tot, Dyr)]
names(out_table) <- c(t(out_table[1,]))
unique(out_table$model_gruppe)
out_table <- out_table[-1,]
out_table[, model_gruppe:= factor(model_gruppe, levels = c('kvæg_ringkanal','kvæg_fast_skrab','kvæg_spalter_skrab',
'kvæg_hæld_fast_skrab','kvæg_andre_hyppig',
'spalter_33_67_slagtesvin','spalter_25_50_slagtesvin','spalter_50_75_slagtesvin',
'løs_individuel_søer','farestald_delvis_spalte', 'farestald_fuldspalte',
'toklimastald_smågrise','spalter_smågrise'))]
setorder(out_table, Scenarie, model_gruppe)
cols_index <- which(!names(out_table) %in% c('model_gruppe', 'Scenarie','Dyr'))
out_table[, (cols_index) := lapply(.SD, function(x) round(as.numeric(x), 3)), .SDcols = cols_index]
out_table[, model_gruppe := gsub('_', ' ', model_gruppe)]
write.xlsx(out_table, '../output/emis_table_KVIK.xlsx')
